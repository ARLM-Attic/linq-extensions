//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1318
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EeekSoft.LinqDemos {
    
    
    public partial class NorthwindDataContext : global::System.Data.Linq.DataContext {
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext(string connection) : 
                base(connection) {
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext(global::System.Data.IDbConnection connection) : 
                base(connection) {
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext() : 
                base(global::EeekSoft.LinqDemos.Properties.Settings.Default.NorthwindConnectionString) {
        }
        
        public global::System.Data.Linq.Table<Category> Categories {
            get {
                return this.GetTable<Category>();
            }
        }
        
        public global::System.Data.Linq.Table<Territory> Territories {
            get {
                return this.GetTable<Territory>();
            }
        }
        
        public global::System.Data.Linq.Table<CustomerCustomerDemo> CustomerCustomerDemos {
            get {
                return this.GetTable<CustomerCustomerDemo>();
            }
        }
        
        public global::System.Data.Linq.Table<CustomerDemographic> CustomerDemographics {
            get {
                return this.GetTable<CustomerDemographic>();
            }
        }
        
        public global::System.Data.Linq.Table<Customer> Customers {
            get {
                return this.GetTable<Customer>();
            }
        }
        
        public global::System.Data.Linq.Table<Employee> Employees {
            get {
                return this.GetTable<Employee>();
            }
        }
        
        public global::System.Data.Linq.Table<EmployeeTerritory> EmployeeTerritories {
            get {
                return this.GetTable<EmployeeTerritory>();
            }
        }
        
        public global::System.Data.Linq.Table<Order_Detail> Order_Details {
            get {
                return this.GetTable<Order_Detail>();
            }
        }
        
        public global::System.Data.Linq.Table<Order> Orders {
            get {
                return this.GetTable<Order>();
            }
        }
        
        public global::System.Data.Linq.Table<Product> Products {
            get {
                return this.GetTable<Product>();
            }
        }
        
        public global::System.Data.Linq.Table<Region> Regions {
            get {
                return this.GetTable<Region>();
            }
        }
        
        public global::System.Data.Linq.Table<Shipper> Shippers {
            get {
                return this.GetTable<Shipper>();
            }
        }
        
        public global::System.Data.Linq.Table<Supplier> Suppliers {
            get {
                return this.GetTable<Supplier>();
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Categories")]
    public partial class Category : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _CategoryID;
        
        private string _CategoryName;
        
        private string _Description;
        
        private byte[] _Picture;
        
        private global::System.Data.Linq.EntitySet<Product> _Products;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Category() {
            this._CategoryID = default(int);
            this._Products = new global::System.Data.Linq.EntitySet<Product>(new global::System.Action<Product>(this.Attach_Products), new global::System.Action<Product>(this.Detach_Products));
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryID", Name="CategoryID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int CategoryID {
            get {
                return this._CategoryID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryName", Name="CategoryName", DBType="NVarChar(15) NOT NULL", CanBeNull=false)]
        public string CategoryName {
            get {
                return this._CategoryName;
            }
            set {
                if ((this._CategoryName != value)) {
                    this.OnPropertyChanging("CategoryName");
                    this._CategoryName = value;
                    this.OnPropertyChanged("CategoryName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Description", Name="Description", DBType="NText")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnPropertyChanging("Description");
                    this._Description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Picture", Name="Picture", DBType="Image")]
        public byte[] Picture {
            get {
                return this._Picture;
            }
            set {
                if ((this._Picture != value)) {
                    this.OnPropertyChanging("Picture");
                    this._Picture = value;
                    this.OnPropertyChanged("Picture");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Categories", Storage="_Products", OtherKey="CategoryID", ThisKey="CategoryID")]
        public global::System.Data.Linq.EntitySet<Product> Products {
            get {
                return this._Products;
            }
            set {
                this._Products.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Category = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Category = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Territories")]
    public partial class Territory : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private string _TerritoryID;
        
        private string _TerritoryDescription;
        
        private int _RegionID;
        
        private global::System.Data.Linq.EntitySet<EmployeeTerritory> _EmployeeTerritories;
        
        private global::System.Data.Linq.EntityRef<Region> _Region;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Territory() {
            this._EmployeeTerritories = new global::System.Data.Linq.EntitySet<EmployeeTerritory>(new global::System.Action<EmployeeTerritory>(this.Attach_EmployeeTerritories), new global::System.Action<EmployeeTerritory>(this.Detach_EmployeeTerritories));
            this._Region = default(global::System.Data.Linq.EntityRef<Region>);
        }
        
        [global::System.Data.Linq.Column(Storage="_TerritoryID", Name="TerritoryID", DBType="NVarChar(20) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string TerritoryID {
            get {
                return this._TerritoryID;
            }
            set {
                if ((this._TerritoryID != value)) {
                    this.OnPropertyChanging("TerritoryID");
                    this._TerritoryID = value;
                    this.OnPropertyChanged("TerritoryID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_TerritoryDescription", Name="TerritoryDescription", DBType="NChar(50) NOT NULL", CanBeNull=false)]
        public string TerritoryDescription {
            get {
                return this._TerritoryDescription;
            }
            set {
                if ((this._TerritoryDescription != value)) {
                    this.OnPropertyChanging("TerritoryDescription");
                    this._TerritoryDescription = value;
                    this.OnPropertyChanged("TerritoryDescription");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_RegionID", Name="RegionID", DBType="Int NOT NULL", CanBeNull=false)]
        public int RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this.OnPropertyChanging("RegionID");
                    this._RegionID = value;
                    this.OnPropertyChanged("RegionID");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_EmployeeTerritories_Territories", Storage="_EmployeeTerritories", OtherKey="TerritoryID", ThisKey="TerritoryID")]
        public global::System.Data.Linq.EntitySet<EmployeeTerritory> EmployeeTerritories {
            get {
                return this._EmployeeTerritories;
            }
            set {
                this._EmployeeTerritories.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Territories_Region", Storage="_Region", OtherKey="RegionID", ThisKey="RegionID", IsForeignKey=true)]
        public Region Region {
            get {
                return this._Region.Entity;
            }
            set {
                if ((this._Region.Entity != value)) {
                    this.OnPropertyChanging("Region");
                    if ((this._Region.Entity != null)) {
                        Region temp = this._Region.Entity;
                        this._Region.Entity = null;
                        temp.Territories.Remove(this);
                    }
                    this._Region.Entity = value;
                    if ((value != null)) {
                        value.Territories.Add(this);
                    }
                    this.OnPropertyChanged("Region");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_EmployeeTerritories(EmployeeTerritory entity) {
            this.OnPropertyChanging(null);
            entity.Territory = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_EmployeeTerritories(EmployeeTerritory entity) {
            this.OnPropertyChanging(null);
            entity.Territory = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.CustomerCustomerDemo")]
    public partial class CustomerCustomerDemo : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private string _CustomerID;
        
        private string _CustomerTypeID;
        
        private global::System.Data.Linq.EntityRef<CustomerDemographic> _CustomerDemographic;
        
        private global::System.Data.Linq.EntityRef<Customer> _Customer;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomerCustomerDemo() {
            this._CustomerDemographic = default(global::System.Data.Linq.EntityRef<CustomerDemographic>);
            this._Customer = default(global::System.Data.Linq.EntityRef<Customer>);
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerID", Name="CustomerID", DBType="NChar(5) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string CustomerID {
            get {
                return this._CustomerID;
            }
            set {
                if ((this._CustomerID != value)) {
                    this.OnPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.OnPropertyChanged("CustomerID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerTypeID", Name="CustomerTypeID", DBType="NChar(10) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string CustomerTypeID {
            get {
                return this._CustomerTypeID;
            }
            set {
                if ((this._CustomerTypeID != value)) {
                    this.OnPropertyChanging("CustomerTypeID");
                    this._CustomerTypeID = value;
                    this.OnPropertyChanged("CustomerTypeID");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_CustomerCustomerDemo", Storage="_CustomerDemographic", OtherKey="CustomerTypeID", ThisKey="CustomerTypeID", IsForeignKey=true)]
        public CustomerDemographic CustomerDemographic {
            get {
                return this._CustomerDemographic.Entity;
            }
            set {
                if ((this._CustomerDemographic.Entity != value)) {
                    this.OnPropertyChanging("CustomerDemographic");
                    if ((this._CustomerDemographic.Entity != null)) {
                        CustomerDemographic temp = this._CustomerDemographic.Entity;
                        this._CustomerDemographic.Entity = null;
                        temp.CustomerCustomerDemos.Remove(this);
                    }
                    this._CustomerDemographic.Entity = value;
                    if ((value != null)) {
                        value.CustomerCustomerDemos.Add(this);
                    }
                    this.OnPropertyChanged("CustomerDemographic");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_CustomerCustomerDemo_Customers", Storage="_Customer", OtherKey="CustomerID", ThisKey="CustomerID", IsForeignKey=true)]
        public Customer Customer {
            get {
                return this._Customer.Entity;
            }
            set {
                if ((this._Customer.Entity != value)) {
                    this.OnPropertyChanging("Customer");
                    if ((this._Customer.Entity != null)) {
                        Customer temp = this._Customer.Entity;
                        this._Customer.Entity = null;
                        temp.CustomerCustomerDemos.Remove(this);
                    }
                    this._Customer.Entity = value;
                    if ((value != null)) {
                        value.CustomerCustomerDemos.Add(this);
                    }
                    this.OnPropertyChanged("Customer");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.CustomerDemographics")]
    public partial class CustomerDemographic : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private string _CustomerTypeID;
        
        private string _CustomerDesc;
        
        private global::System.Data.Linq.EntitySet<CustomerCustomerDemo> _CustomerCustomerDemos;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomerDemographic() {
            this._CustomerCustomerDemos = new global::System.Data.Linq.EntitySet<CustomerCustomerDemo>(new global::System.Action<CustomerCustomerDemo>(this.Attach_CustomerCustomerDemos), new global::System.Action<CustomerCustomerDemo>(this.Detach_CustomerCustomerDemos));
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerTypeID", Name="CustomerTypeID", DBType="NChar(10) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string CustomerTypeID {
            get {
                return this._CustomerTypeID;
            }
            set {
                if ((this._CustomerTypeID != value)) {
                    this.OnPropertyChanging("CustomerTypeID");
                    this._CustomerTypeID = value;
                    this.OnPropertyChanged("CustomerTypeID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerDesc", Name="CustomerDesc", DBType="NText")]
        public string CustomerDesc {
            get {
                return this._CustomerDesc;
            }
            set {
                if ((this._CustomerDesc != value)) {
                    this.OnPropertyChanging("CustomerDesc");
                    this._CustomerDesc = value;
                    this.OnPropertyChanged("CustomerDesc");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_CustomerCustomerDemo", Storage="_CustomerCustomerDemos", OtherKey="CustomerTypeID", ThisKey="CustomerTypeID")]
        public global::System.Data.Linq.EntitySet<CustomerCustomerDemo> CustomerCustomerDemos {
            get {
                return this._CustomerCustomerDemos;
            }
            set {
                this._CustomerCustomerDemos.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_CustomerCustomerDemos(CustomerCustomerDemo entity) {
            this.OnPropertyChanging(null);
            entity.CustomerDemographic = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_CustomerCustomerDemos(CustomerCustomerDemo entity) {
            this.OnPropertyChanging(null);
            entity.CustomerDemographic = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Customers")]
    public partial class Customer : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private string _CustomerID;
        
        private string _CompanyName;
        
        private string _ContactName;
        
        private string _ContactTitle;
        
        private string _Address;
        
        private string _City;
        
        private string _Region;
        
        private string _PostalCode;
        
        private string _Country;
        
        private string _Phone;
        
        private string _Fax;
        
        private global::System.Data.Linq.EntitySet<CustomerCustomerDemo> _CustomerCustomerDemos;
        
        private global::System.Data.Linq.EntitySet<Order> _Orders;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Customer() {
            this._CustomerCustomerDemos = new global::System.Data.Linq.EntitySet<CustomerCustomerDemo>(new global::System.Action<CustomerCustomerDemo>(this.Attach_CustomerCustomerDemos), new global::System.Action<CustomerCustomerDemo>(this.Detach_CustomerCustomerDemos));
            this._Orders = new global::System.Data.Linq.EntitySet<Order>(new global::System.Action<Order>(this.Attach_Orders), new global::System.Action<Order>(this.Detach_Orders));
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerID", Name="CustomerID", DBType="NChar(5) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string CustomerID {
            get {
                return this._CustomerID;
            }
            set {
                if ((this._CustomerID != value)) {
                    this.OnPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.OnPropertyChanged("CustomerID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CompanyName", Name="CompanyName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string CompanyName {
            get {
                return this._CompanyName;
            }
            set {
                if ((this._CompanyName != value)) {
                    this.OnPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactName", Name="ContactName", DBType="NVarChar(30)")]
        public string ContactName {
            get {
                return this._ContactName;
            }
            set {
                if ((this._ContactName != value)) {
                    this.OnPropertyChanging("ContactName");
                    this._ContactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactTitle", Name="ContactTitle", DBType="NVarChar(30)")]
        public string ContactTitle {
            get {
                return this._ContactTitle;
            }
            set {
                if ((this._ContactTitle != value)) {
                    this.OnPropertyChanging("ContactTitle");
                    this._ContactTitle = value;
                    this.OnPropertyChanged("ContactTitle");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Address", Name="Address", DBType="NVarChar(60)")]
        public string Address {
            get {
                return this._Address;
            }
            set {
                if ((this._Address != value)) {
                    this.OnPropertyChanging("Address");
                    this._Address = value;
                    this.OnPropertyChanged("Address");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_City", Name="City", DBType="NVarChar(15)")]
        public string City {
            get {
                return this._City;
            }
            set {
                if ((this._City != value)) {
                    this.OnPropertyChanging("City");
                    this._City = value;
                    this.OnPropertyChanged("City");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Region", Name="Region", DBType="NVarChar(15)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this.OnPropertyChanging("Region");
                    this._Region = value;
                    this.OnPropertyChanged("Region");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_PostalCode", Name="PostalCode", DBType="NVarChar(10)")]
        public string PostalCode {
            get {
                return this._PostalCode;
            }
            set {
                if ((this._PostalCode != value)) {
                    this.OnPropertyChanging("PostalCode");
                    this._PostalCode = value;
                    this.OnPropertyChanged("PostalCode");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Country", Name="Country", DBType="NVarChar(15)")]
        public string Country {
            get {
                return this._Country;
            }
            set {
                if ((this._Country != value)) {
                    this.OnPropertyChanging("Country");
                    this._Country = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Phone", Name="Phone", DBType="NVarChar(24)")]
        public string Phone {
            get {
                return this._Phone;
            }
            set {
                if ((this._Phone != value)) {
                    this.OnPropertyChanging("Phone");
                    this._Phone = value;
                    this.OnPropertyChanged("Phone");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Fax", Name="Fax", DBType="NVarChar(24)")]
        public string Fax {
            get {
                return this._Fax;
            }
            set {
                if ((this._Fax != value)) {
                    this.OnPropertyChanging("Fax");
                    this._Fax = value;
                    this.OnPropertyChanged("Fax");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_CustomerCustomerDemo_Customers", Storage="_CustomerCustomerDemos", OtherKey="CustomerID", ThisKey="CustomerID")]
        public global::System.Data.Linq.EntitySet<CustomerCustomerDemo> CustomerCustomerDemos {
            get {
                return this._CustomerCustomerDemos;
            }
            set {
                this._CustomerCustomerDemos.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Customers", Storage="_Orders", OtherKey="CustomerID", ThisKey="CustomerID")]
        public global::System.Data.Linq.EntitySet<Order> Orders {
            get {
                return this._Orders;
            }
            set {
                this._Orders.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_CustomerCustomerDemos(CustomerCustomerDemo entity) {
            this.OnPropertyChanging(null);
            entity.Customer = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_CustomerCustomerDemos(CustomerCustomerDemo entity) {
            this.OnPropertyChanging(null);
            entity.Customer = null;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Customer = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Customer = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Employees")]
    public partial class Employee : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _EmployeeID;
        
        private string _LastName;
        
        private string _FirstName;
        
        private string _Title;
        
        private string _TitleOfCourtesy;
        
        private global::System.Nullable<global::System.DateTime> _BirthDate;
        
        private global::System.Nullable<global::System.DateTime> _HireDate;
        
        private string _Address;
        
        private string _City;
        
        private string _Region;
        
        private string _PostalCode;
        
        private string _Country;
        
        private string _HomePhone;
        
        private string _Extension;
        
        private byte[] _Photo;
        
        private string _Notes;
        
        private global::System.Nullable<int> _ReportsTo;
        
        private string _PhotoPath;
        
        private global::System.Data.Linq.EntitySet<Employee> _Employees;
        
        private global::System.Data.Linq.EntitySet<EmployeeTerritory> _EmployeeTerritories;
        
        private global::System.Data.Linq.EntitySet<Order> _Orders;
        
        private global::System.Data.Linq.EntityRef<Employee> _Employee1;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Employee() {
            this._EmployeeID = default(int);
            this._Employees = new global::System.Data.Linq.EntitySet<Employee>(new global::System.Action<Employee>(this.Attach_Employees), new global::System.Action<Employee>(this.Detach_Employees));
            this._EmployeeTerritories = new global::System.Data.Linq.EntitySet<EmployeeTerritory>(new global::System.Action<EmployeeTerritory>(this.Attach_EmployeeTerritories), new global::System.Action<EmployeeTerritory>(this.Detach_EmployeeTerritories));
            this._Orders = new global::System.Data.Linq.EntitySet<Order>(new global::System.Action<Order>(this.Attach_Orders), new global::System.Action<Order>(this.Detach_Orders));
            this._Employee1 = default(global::System.Data.Linq.EntityRef<Employee>);
        }
        
        [global::System.Data.Linq.Column(Storage="_EmployeeID", Name="EmployeeID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int EmployeeID {
            get {
                return this._EmployeeID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_LastName", Name="LastName", DBType="NVarChar(20) NOT NULL", CanBeNull=false)]
        public string LastName {
            get {
                return this._LastName;
            }
            set {
                if ((this._LastName != value)) {
                    this.OnPropertyChanging("LastName");
                    this._LastName = value;
                    this.OnPropertyChanged("LastName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_FirstName", Name="FirstName", DBType="NVarChar(10) NOT NULL", CanBeNull=false)]
        public string FirstName {
            get {
                return this._FirstName;
            }
            set {
                if ((this._FirstName != value)) {
                    this.OnPropertyChanging("FirstName");
                    this._FirstName = value;
                    this.OnPropertyChanged("FirstName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Title", Name="Title", DBType="NVarChar(30)")]
        public string Title {
            get {
                return this._Title;
            }
            set {
                if ((this._Title != value)) {
                    this.OnPropertyChanging("Title");
                    this._Title = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_TitleOfCourtesy", Name="TitleOfCourtesy", DBType="NVarChar(25)")]
        public string TitleOfCourtesy {
            get {
                return this._TitleOfCourtesy;
            }
            set {
                if ((this._TitleOfCourtesy != value)) {
                    this.OnPropertyChanging("TitleOfCourtesy");
                    this._TitleOfCourtesy = value;
                    this.OnPropertyChanged("TitleOfCourtesy");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_BirthDate", Name="BirthDate", DBType="DateTime")]
        public global::System.Nullable<global::System.DateTime> BirthDate {
            get {
                return this._BirthDate;
            }
            set {
                if ((this._BirthDate != value)) {
                    this.OnPropertyChanging("BirthDate");
                    this._BirthDate = value;
                    this.OnPropertyChanged("BirthDate");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_HireDate", Name="HireDate", DBType="DateTime")]
        public global::System.Nullable<global::System.DateTime> HireDate {
            get {
                return this._HireDate;
            }
            set {
                if ((this._HireDate != value)) {
                    this.OnPropertyChanging("HireDate");
                    this._HireDate = value;
                    this.OnPropertyChanged("HireDate");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Address", Name="Address", DBType="NVarChar(60)")]
        public string Address {
            get {
                return this._Address;
            }
            set {
                if ((this._Address != value)) {
                    this.OnPropertyChanging("Address");
                    this._Address = value;
                    this.OnPropertyChanged("Address");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_City", Name="City", DBType="NVarChar(15)")]
        public string City {
            get {
                return this._City;
            }
            set {
                if ((this._City != value)) {
                    this.OnPropertyChanging("City");
                    this._City = value;
                    this.OnPropertyChanged("City");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Region", Name="Region", DBType="NVarChar(15)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this.OnPropertyChanging("Region");
                    this._Region = value;
                    this.OnPropertyChanged("Region");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_PostalCode", Name="PostalCode", DBType="NVarChar(10)")]
        public string PostalCode {
            get {
                return this._PostalCode;
            }
            set {
                if ((this._PostalCode != value)) {
                    this.OnPropertyChanging("PostalCode");
                    this._PostalCode = value;
                    this.OnPropertyChanged("PostalCode");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Country", Name="Country", DBType="NVarChar(15)")]
        public string Country {
            get {
                return this._Country;
            }
            set {
                if ((this._Country != value)) {
                    this.OnPropertyChanging("Country");
                    this._Country = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_HomePhone", Name="HomePhone", DBType="NVarChar(24)")]
        public string HomePhone {
            get {
                return this._HomePhone;
            }
            set {
                if ((this._HomePhone != value)) {
                    this.OnPropertyChanging("HomePhone");
                    this._HomePhone = value;
                    this.OnPropertyChanged("HomePhone");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Extension", Name="Extension", DBType="NVarChar(4)")]
        public string Extension {
            get {
                return this._Extension;
            }
            set {
                if ((this._Extension != value)) {
                    this.OnPropertyChanging("Extension");
                    this._Extension = value;
                    this.OnPropertyChanged("Extension");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Photo", Name="Photo", DBType="Image")]
        public byte[] Photo {
            get {
                return this._Photo;
            }
            set {
                if ((this._Photo != value)) {
                    this.OnPropertyChanging("Photo");
                    this._Photo = value;
                    this.OnPropertyChanged("Photo");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Notes", Name="Notes", DBType="NText")]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnPropertyChanging("Notes");
                    this._Notes = value;
                    this.OnPropertyChanged("Notes");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ReportsTo", Name="ReportsTo", DBType="Int")]
        public global::System.Nullable<int> ReportsTo {
            get {
                return this._ReportsTo;
            }
            set {
                if ((this._ReportsTo != value)) {
                    this.OnPropertyChanging("ReportsTo");
                    this._ReportsTo = value;
                    this.OnPropertyChanged("ReportsTo");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_PhotoPath", Name="PhotoPath", DBType="NVarChar(255)")]
        public string PhotoPath {
            get {
                return this._PhotoPath;
            }
            set {
                if ((this._PhotoPath != value)) {
                    this.OnPropertyChanging("PhotoPath");
                    this._PhotoPath = value;
                    this.OnPropertyChanged("PhotoPath");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Employees_Employees", Storage="_Employees", OtherKey="ReportsTo", ThisKey="EmployeeID")]
        public global::System.Data.Linq.EntitySet<Employee> Employees {
            get {
                return this._Employees;
            }
            set {
                this._Employees.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_EmployeeTerritories_Employees", Storage="_EmployeeTerritories", OtherKey="EmployeeID", ThisKey="EmployeeID")]
        public global::System.Data.Linq.EntitySet<EmployeeTerritory> EmployeeTerritories {
            get {
                return this._EmployeeTerritories;
            }
            set {
                this._EmployeeTerritories.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Employees", Storage="_Orders", OtherKey="EmployeeID", ThisKey="EmployeeID")]
        public global::System.Data.Linq.EntitySet<Order> Orders {
            get {
                return this._Orders;
            }
            set {
                this._Orders.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Employees_Employees", Storage="_Employee1", OtherKey="EmployeeID", ThisKey="ReportsTo", IsForeignKey=true)]
        public Employee Employee1 {
            get {
                return this._Employee1.Entity;
            }
            set {
                if ((this._Employee1.Entity != value)) {
                    this.OnPropertyChanging("Employee1");
                    if ((this._Employee1.Entity != null)) {
                        Employee temp = this._Employee1.Entity;
                        this._Employee1.Entity = null;
                        temp.Employees.Remove(this);
                    }
                    this._Employee1.Entity = value;
                    if ((value != null)) {
                        value.Employees.Add(this);
                    }
                    this.OnPropertyChanged("Employee1");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Employees(Employee entity) {
            this.OnPropertyChanging(null);
            entity.Employee1 = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Employees(Employee entity) {
            this.OnPropertyChanging(null);
            entity.Employee1 = null;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_EmployeeTerritories(EmployeeTerritory entity) {
            this.OnPropertyChanging(null);
            entity.Employee = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_EmployeeTerritories(EmployeeTerritory entity) {
            this.OnPropertyChanging(null);
            entity.Employee = null;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Employee = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Employee = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.EmployeeTerritories")]
    public partial class EmployeeTerritory : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _EmployeeID;
        
        private string _TerritoryID;
        
        private global::System.Data.Linq.EntityRef<Employee> _Employee;
        
        private global::System.Data.Linq.EntityRef<Territory> _Territory;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeTerritory() {
            this._Employee = default(global::System.Data.Linq.EntityRef<Employee>);
            this._Territory = default(global::System.Data.Linq.EntityRef<Territory>);
        }
        
        [global::System.Data.Linq.Column(Storage="_EmployeeID", Name="EmployeeID", DBType="Int NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public int EmployeeID {
            get {
                return this._EmployeeID;
            }
            set {
                if ((this._EmployeeID != value)) {
                    this.OnPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.OnPropertyChanged("EmployeeID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_TerritoryID", Name="TerritoryID", DBType="NVarChar(20) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public string TerritoryID {
            get {
                return this._TerritoryID;
            }
            set {
                if ((this._TerritoryID != value)) {
                    this.OnPropertyChanging("TerritoryID");
                    this._TerritoryID = value;
                    this.OnPropertyChanged("TerritoryID");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_EmployeeTerritories_Employees", Storage="_Employee", OtherKey="EmployeeID", ThisKey="EmployeeID", IsForeignKey=true)]
        public Employee Employee {
            get {
                return this._Employee.Entity;
            }
            set {
                if ((this._Employee.Entity != value)) {
                    this.OnPropertyChanging("Employee");
                    if ((this._Employee.Entity != null)) {
                        Employee temp = this._Employee.Entity;
                        this._Employee.Entity = null;
                        temp.EmployeeTerritories.Remove(this);
                    }
                    this._Employee.Entity = value;
                    if ((value != null)) {
                        value.EmployeeTerritories.Add(this);
                    }
                    this.OnPropertyChanged("Employee");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_EmployeeTerritories_Territories", Storage="_Territory", OtherKey="TerritoryID", ThisKey="TerritoryID", IsForeignKey=true)]
        public Territory Territory {
            get {
                return this._Territory.Entity;
            }
            set {
                if ((this._Territory.Entity != value)) {
                    this.OnPropertyChanging("Territory");
                    if ((this._Territory.Entity != null)) {
                        Territory temp = this._Territory.Entity;
                        this._Territory.Entity = null;
                        temp.EmployeeTerritories.Remove(this);
                    }
                    this._Territory.Entity = value;
                    if ((value != null)) {
                        value.EmployeeTerritories.Add(this);
                    }
                    this.OnPropertyChanged("Territory");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.[Order Details]")]
    public partial class Order_Detail : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _OrderID;
        
        private int _ProductID;
        
        private decimal _UnitPrice;
        
        private short _Quantity;
        
        private float _Discount;
        
        private global::System.Data.Linq.EntityRef<Order> _Order;
        
        private global::System.Data.Linq.EntityRef<Product> _Product;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order_Detail() {
            this._Order = default(global::System.Data.Linq.EntityRef<Order>);
            this._Product = default(global::System.Data.Linq.EntityRef<Product>);
        }
        
        [global::System.Data.Linq.Column(Storage="_OrderID", Name="OrderID", DBType="Int NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                if ((this._OrderID != value)) {
                    this.OnPropertyChanging("OrderID");
                    this._OrderID = value;
                    this.OnPropertyChanged("OrderID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ProductID", Name="ProductID", DBType="Int NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public int ProductID {
            get {
                return this._ProductID;
            }
            set {
                if ((this._ProductID != value)) {
                    this.OnPropertyChanging("ProductID");
                    this._ProductID = value;
                    this.OnPropertyChanged("ProductID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitPrice", Name="UnitPrice", DBType="Money NOT NULL", CanBeNull=false)]
        public decimal UnitPrice {
            get {
                return this._UnitPrice;
            }
            set {
                if ((this._UnitPrice != value)) {
                    this.OnPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.OnPropertyChanged("UnitPrice");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Quantity", Name="Quantity", DBType="SmallInt NOT NULL", CanBeNull=false)]
        public short Quantity {
            get {
                return this._Quantity;
            }
            set {
                if ((this._Quantity != value)) {
                    this.OnPropertyChanging("Quantity");
                    this._Quantity = value;
                    this.OnPropertyChanged("Quantity");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Discount", Name="Discount", DBType="Real NOT NULL", CanBeNull=false)]
        public float Discount {
            get {
                return this._Discount;
            }
            set {
                if ((this._Discount != value)) {
                    this.OnPropertyChanging("Discount");
                    this._Discount = value;
                    this.OnPropertyChanged("Discount");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Order_Details_Orders", Storage="_Order", OtherKey="OrderID", ThisKey="OrderID", IsForeignKey=true)]
        public Order Order {
            get {
                return this._Order.Entity;
            }
            set {
                if ((this._Order.Entity != value)) {
                    this.OnPropertyChanging("Order");
                    if ((this._Order.Entity != null)) {
                        Order temp = this._Order.Entity;
                        this._Order.Entity = null;
                        temp.Order_Details.Remove(this);
                    }
                    this._Order.Entity = value;
                    if ((value != null)) {
                        value.Order_Details.Add(this);
                    }
                    this.OnPropertyChanged("Order");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Order_Details_Products", Storage="_Product", OtherKey="ProductID", ThisKey="ProductID", IsForeignKey=true)]
        public Product Product {
            get {
                return this._Product.Entity;
            }
            set {
                if ((this._Product.Entity != value)) {
                    this.OnPropertyChanging("Product");
                    if ((this._Product.Entity != null)) {
                        Product temp = this._Product.Entity;
                        this._Product.Entity = null;
                        temp.Order_Details.Remove(this);
                    }
                    this._Product.Entity = value;
                    if ((value != null)) {
                        value.Order_Details.Add(this);
                    }
                    this.OnPropertyChanged("Product");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Orders")]
    public partial class Order : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _OrderID;
        
        private string _CustomerID;
        
        private global::System.Nullable<int> _EmployeeID;
        
        private global::System.Nullable<global::System.DateTime> _OrderDate;
        
        private global::System.Nullable<global::System.DateTime> _RequiredDate;
        
        private global::System.Nullable<global::System.DateTime> _ShippedDate;
        
        private global::System.Nullable<int> _ShipVia;
        
        private global::System.Nullable<decimal> _Freight;
        
        private string _ShipName;
        
        private string _ShipAddress;
        
        private string _ShipCity;
        
        private string _ShipRegion;
        
        private string _ShipPostalCode;
        
        private string _ShipCountry;
        
        private global::System.Data.Linq.EntitySet<Order_Detail> _Order_Details;
        
        private global::System.Data.Linq.EntityRef<Customer> _Customer;
        
        private global::System.Data.Linq.EntityRef<Employee> _Employee;
        
        private global::System.Data.Linq.EntityRef<Shipper> _Shipper;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order() {
            this._OrderID = default(int);
            this._Order_Details = new global::System.Data.Linq.EntitySet<Order_Detail>(new global::System.Action<Order_Detail>(this.Attach_Order_Details), new global::System.Action<Order_Detail>(this.Detach_Order_Details));
            this._Customer = default(global::System.Data.Linq.EntityRef<Customer>);
            this._Employee = default(global::System.Data.Linq.EntityRef<Employee>);
            this._Shipper = default(global::System.Data.Linq.EntityRef<Shipper>);
        }
        
        [global::System.Data.Linq.Column(Storage="_OrderID", Name="OrderID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int OrderID {
            get {
                return this._OrderID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CustomerID", Name="CustomerID", DBType="NChar(5)")]
        public string CustomerID {
            get {
                return this._CustomerID;
            }
            set {
                if ((this._CustomerID != value)) {
                    this.OnPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.OnPropertyChanged("CustomerID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_EmployeeID", Name="EmployeeID", DBType="Int")]
        public global::System.Nullable<int> EmployeeID {
            get {
                return this._EmployeeID;
            }
            set {
                if ((this._EmployeeID != value)) {
                    this.OnPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.OnPropertyChanged("EmployeeID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_OrderDate", Name="OrderDate", DBType="DateTime")]
        public global::System.Nullable<global::System.DateTime> OrderDate {
            get {
                return this._OrderDate;
            }
            set {
                if ((this._OrderDate != value)) {
                    this.OnPropertyChanging("OrderDate");
                    this._OrderDate = value;
                    this.OnPropertyChanged("OrderDate");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_RequiredDate", Name="RequiredDate", DBType="DateTime")]
        public global::System.Nullable<global::System.DateTime> RequiredDate {
            get {
                return this._RequiredDate;
            }
            set {
                if ((this._RequiredDate != value)) {
                    this.OnPropertyChanging("RequiredDate");
                    this._RequiredDate = value;
                    this.OnPropertyChanged("RequiredDate");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShippedDate", Name="ShippedDate", DBType="DateTime")]
        public global::System.Nullable<global::System.DateTime> ShippedDate {
            get {
                return this._ShippedDate;
            }
            set {
                if ((this._ShippedDate != value)) {
                    this.OnPropertyChanging("ShippedDate");
                    this._ShippedDate = value;
                    this.OnPropertyChanged("ShippedDate");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipVia", Name="ShipVia", DBType="Int")]
        public global::System.Nullable<int> ShipVia {
            get {
                return this._ShipVia;
            }
            set {
                if ((this._ShipVia != value)) {
                    this.OnPropertyChanging("ShipVia");
                    this._ShipVia = value;
                    this.OnPropertyChanged("ShipVia");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Freight", Name="Freight", DBType="Money")]
        public global::System.Nullable<decimal> Freight {
            get {
                return this._Freight;
            }
            set {
                if ((this._Freight != value)) {
                    this.OnPropertyChanging("Freight");
                    this._Freight = value;
                    this.OnPropertyChanged("Freight");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipName", Name="ShipName", DBType="NVarChar(40)")]
        public string ShipName {
            get {
                return this._ShipName;
            }
            set {
                if ((this._ShipName != value)) {
                    this.OnPropertyChanging("ShipName");
                    this._ShipName = value;
                    this.OnPropertyChanged("ShipName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipAddress", Name="ShipAddress", DBType="NVarChar(60)")]
        public string ShipAddress {
            get {
                return this._ShipAddress;
            }
            set {
                if ((this._ShipAddress != value)) {
                    this.OnPropertyChanging("ShipAddress");
                    this._ShipAddress = value;
                    this.OnPropertyChanged("ShipAddress");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipCity", Name="ShipCity", DBType="NVarChar(15)")]
        public string ShipCity {
            get {
                return this._ShipCity;
            }
            set {
                if ((this._ShipCity != value)) {
                    this.OnPropertyChanging("ShipCity");
                    this._ShipCity = value;
                    this.OnPropertyChanged("ShipCity");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipRegion", Name="ShipRegion", DBType="NVarChar(15)")]
        public string ShipRegion {
            get {
                return this._ShipRegion;
            }
            set {
                if ((this._ShipRegion != value)) {
                    this.OnPropertyChanging("ShipRegion");
                    this._ShipRegion = value;
                    this.OnPropertyChanged("ShipRegion");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipPostalCode", Name="ShipPostalCode", DBType="NVarChar(10)")]
        public string ShipPostalCode {
            get {
                return this._ShipPostalCode;
            }
            set {
                if ((this._ShipPostalCode != value)) {
                    this.OnPropertyChanging("ShipPostalCode");
                    this._ShipPostalCode = value;
                    this.OnPropertyChanged("ShipPostalCode");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipCountry", Name="ShipCountry", DBType="NVarChar(15)")]
        public string ShipCountry {
            get {
                return this._ShipCountry;
            }
            set {
                if ((this._ShipCountry != value)) {
                    this.OnPropertyChanging("ShipCountry");
                    this._ShipCountry = value;
                    this.OnPropertyChanged("ShipCountry");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Order_Details_Orders", Storage="_Order_Details", OtherKey="OrderID", ThisKey="OrderID")]
        public global::System.Data.Linq.EntitySet<Order_Detail> Order_Details {
            get {
                return this._Order_Details;
            }
            set {
                this._Order_Details.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Customers", Storage="_Customer", OtherKey="CustomerID", ThisKey="CustomerID", IsForeignKey=true)]
        public Customer Customer {
            get {
                return this._Customer.Entity;
            }
            set {
                if ((this._Customer.Entity != value)) {
                    this.OnPropertyChanging("Customer");
                    if ((this._Customer.Entity != null)) {
                        Customer temp = this._Customer.Entity;
                        this._Customer.Entity = null;
                        temp.Orders.Remove(this);
                    }
                    this._Customer.Entity = value;
                    if ((value != null)) {
                        value.Orders.Add(this);
                    }
                    this.OnPropertyChanged("Customer");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Employees", Storage="_Employee", OtherKey="EmployeeID", ThisKey="EmployeeID", IsForeignKey=true)]
        public Employee Employee {
            get {
                return this._Employee.Entity;
            }
            set {
                if ((this._Employee.Entity != value)) {
                    this.OnPropertyChanging("Employee");
                    if ((this._Employee.Entity != null)) {
                        Employee temp = this._Employee.Entity;
                        this._Employee.Entity = null;
                        temp.Orders.Remove(this);
                    }
                    this._Employee.Entity = value;
                    if ((value != null)) {
                        value.Orders.Add(this);
                    }
                    this.OnPropertyChanged("Employee");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Shippers", Storage="_Shipper", OtherKey="ShipperID", ThisKey="ShipVia", IsForeignKey=true)]
        public Shipper Shipper {
            get {
                return this._Shipper.Entity;
            }
            set {
                if ((this._Shipper.Entity != value)) {
                    this.OnPropertyChanging("Shipper");
                    if ((this._Shipper.Entity != null)) {
                        Shipper temp = this._Shipper.Entity;
                        this._Shipper.Entity = null;
                        temp.Orders.Remove(this);
                    }
                    this._Shipper.Entity = value;
                    if ((value != null)) {
                        value.Orders.Add(this);
                    }
                    this.OnPropertyChanged("Shipper");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Order_Details(Order_Detail entity) {
            this.OnPropertyChanging(null);
            entity.Order = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Order_Details(Order_Detail entity) {
            this.OnPropertyChanging(null);
            entity.Order = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Products")]
    public partial class Product : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _ProductID;
        
        private string _ProductName;
        
        private global::System.Nullable<int> _SupplierID;
        
        private global::System.Nullable<int> _CategoryID;
        
        private string _QuantityPerUnit;
        
        private global::System.Nullable<decimal> _UnitPrice;
        
        private global::System.Nullable<short> _UnitsInStock;
        
        private global::System.Nullable<short> _UnitsOnOrder;
        
        private global::System.Nullable<short> _ReorderLevel;
        
        private bool _Discontinued;
        
        private global::System.Data.Linq.EntitySet<Order_Detail> _Order_Details;
        
        private global::System.Data.Linq.EntityRef<Category> _Category;
        
        private global::System.Data.Linq.EntityRef<Supplier> _Supplier;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Product() {
            this._ProductID = default(int);
            this._Order_Details = new global::System.Data.Linq.EntitySet<Order_Detail>(new global::System.Action<Order_Detail>(this.Attach_Order_Details), new global::System.Action<Order_Detail>(this.Detach_Order_Details));
            this._Category = default(global::System.Data.Linq.EntityRef<Category>);
            this._Supplier = default(global::System.Data.Linq.EntityRef<Supplier>);
        }
        
        [global::System.Data.Linq.Column(Storage="_ProductID", Name="ProductID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int ProductID {
            get {
                return this._ProductID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ProductName", Name="ProductName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string ProductName {
            get {
                return this._ProductName;
            }
            set {
                if ((this._ProductName != value)) {
                    this.OnPropertyChanging("ProductName");
                    this._ProductName = value;
                    this.OnPropertyChanged("ProductName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_SupplierID", Name="SupplierID", DBType="Int")]
        public global::System.Nullable<int> SupplierID {
            get {
                return this._SupplierID;
            }
            set {
                if ((this._SupplierID != value)) {
                    this.OnPropertyChanging("SupplierID");
                    this._SupplierID = value;
                    this.OnPropertyChanged("SupplierID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryID", Name="CategoryID", DBType="Int")]
        public global::System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnPropertyChanging("CategoryID");
                    this._CategoryID = value;
                    this.OnPropertyChanged("CategoryID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_QuantityPerUnit", Name="QuantityPerUnit", DBType="NVarChar(20)")]
        public string QuantityPerUnit {
            get {
                return this._QuantityPerUnit;
            }
            set {
                if ((this._QuantityPerUnit != value)) {
                    this.OnPropertyChanging("QuantityPerUnit");
                    this._QuantityPerUnit = value;
                    this.OnPropertyChanged("QuantityPerUnit");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitPrice", Name="UnitPrice", DBType="Money")]
        public global::System.Nullable<decimal> UnitPrice {
            get {
                return this._UnitPrice;
            }
            set {
                if ((this._UnitPrice != value)) {
                    this.OnPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.OnPropertyChanged("UnitPrice");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitsInStock", Name="UnitsInStock", DBType="SmallInt")]
        public global::System.Nullable<short> UnitsInStock {
            get {
                return this._UnitsInStock;
            }
            set {
                if ((this._UnitsInStock != value)) {
                    this.OnPropertyChanging("UnitsInStock");
                    this._UnitsInStock = value;
                    this.OnPropertyChanged("UnitsInStock");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitsOnOrder", Name="UnitsOnOrder", DBType="SmallInt")]
        public global::System.Nullable<short> UnitsOnOrder {
            get {
                return this._UnitsOnOrder;
            }
            set {
                if ((this._UnitsOnOrder != value)) {
                    this.OnPropertyChanging("UnitsOnOrder");
                    this._UnitsOnOrder = value;
                    this.OnPropertyChanged("UnitsOnOrder");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ReorderLevel", Name="ReorderLevel", DBType="SmallInt")]
        public global::System.Nullable<short> ReorderLevel {
            get {
                return this._ReorderLevel;
            }
            set {
                if ((this._ReorderLevel != value)) {
                    this.OnPropertyChanging("ReorderLevel");
                    this._ReorderLevel = value;
                    this.OnPropertyChanged("ReorderLevel");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Discontinued", Name="Discontinued", DBType="Bit NOT NULL", CanBeNull=false)]
        public bool Discontinued {
            get {
                return this._Discontinued;
            }
            set {
                if ((this._Discontinued != value)) {
                    this.OnPropertyChanging("Discontinued");
                    this._Discontinued = value;
                    this.OnPropertyChanged("Discontinued");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Order_Details_Products", Storage="_Order_Details", OtherKey="ProductID", ThisKey="ProductID")]
        public global::System.Data.Linq.EntitySet<Order_Detail> Order_Details {
            get {
                return this._Order_Details;
            }
            set {
                this._Order_Details.Assign(value);
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Categories", Storage="_Category", OtherKey="CategoryID", ThisKey="CategoryID", IsForeignKey=true)]
        public Category Category {
            get {
                return this._Category.Entity;
            }
            set {
                if ((this._Category.Entity != value)) {
                    this.OnPropertyChanging("Category");
                    if ((this._Category.Entity != null)) {
                        Category temp = this._Category.Entity;
                        this._Category.Entity = null;
                        temp.Products.Remove(this);
                    }
                    this._Category.Entity = value;
                    if ((value != null)) {
                        value.Products.Add(this);
                    }
                    this.OnPropertyChanged("Category");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Suppliers", Storage="_Supplier", OtherKey="SupplierID", ThisKey="SupplierID", IsForeignKey=true)]
        public Supplier Supplier {
            get {
                return this._Supplier.Entity;
            }
            set {
                if ((this._Supplier.Entity != value)) {
                    this.OnPropertyChanging("Supplier");
                    if ((this._Supplier.Entity != null)) {
                        Supplier temp = this._Supplier.Entity;
                        this._Supplier.Entity = null;
                        temp.Products.Remove(this);
                    }
                    this._Supplier.Entity = value;
                    if ((value != null)) {
                        value.Products.Add(this);
                    }
                    this.OnPropertyChanged("Supplier");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Order_Details(Order_Detail entity) {
            this.OnPropertyChanging(null);
            entity.Product = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Order_Details(Order_Detail entity) {
            this.OnPropertyChanging(null);
            entity.Product = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Region")]
    public partial class Region : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _RegionID;
        
        private string _RegionDescription;
        
        private global::System.Data.Linq.EntitySet<Territory> _Territories;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Region() {
            this._Territories = new global::System.Data.Linq.EntitySet<Territory>(new global::System.Action<Territory>(this.Attach_Territories), new global::System.Action<Territory>(this.Detach_Territories));
        }
        
        [global::System.Data.Linq.Column(Storage="_RegionID", Name="RegionID", DBType="Int NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public int RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this.OnPropertyChanging("RegionID");
                    this._RegionID = value;
                    this.OnPropertyChanged("RegionID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_RegionDescription", Name="RegionDescription", DBType="NChar(50) NOT NULL", CanBeNull=false)]
        public string RegionDescription {
            get {
                return this._RegionDescription;
            }
            set {
                if ((this._RegionDescription != value)) {
                    this.OnPropertyChanging("RegionDescription");
                    this._RegionDescription = value;
                    this.OnPropertyChanged("RegionDescription");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Territories_Region", Storage="_Territories", OtherKey="RegionID", ThisKey="RegionID")]
        public global::System.Data.Linq.EntitySet<Territory> Territories {
            get {
                return this._Territories;
            }
            set {
                this._Territories.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Territories(Territory entity) {
            this.OnPropertyChanging(null);
            entity.Region = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Territories(Territory entity) {
            this.OnPropertyChanging(null);
            entity.Region = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Shippers")]
    public partial class Shipper : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _ShipperID;
        
        private string _CompanyName;
        
        private string _Phone;
        
        private global::System.Data.Linq.EntitySet<Order> _Orders;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Shipper() {
            this._ShipperID = default(int);
            this._Orders = new global::System.Data.Linq.EntitySet<Order>(new global::System.Action<Order>(this.Attach_Orders), new global::System.Action<Order>(this.Detach_Orders));
        }
        
        [global::System.Data.Linq.Column(Storage="_ShipperID", Name="ShipperID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int ShipperID {
            get {
                return this._ShipperID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CompanyName", Name="CompanyName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string CompanyName {
            get {
                return this._CompanyName;
            }
            set {
                if ((this._CompanyName != value)) {
                    this.OnPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Phone", Name="Phone", DBType="NVarChar(24)")]
        public string Phone {
            get {
                return this._Phone;
            }
            set {
                if ((this._Phone != value)) {
                    this.OnPropertyChanging("Phone");
                    this._Phone = value;
                    this.OnPropertyChanged("Phone");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Orders_Shippers", Storage="_Orders", OtherKey="ShipVia", ThisKey="ShipperID")]
        public global::System.Data.Linq.EntitySet<Order> Orders {
            get {
                return this._Orders;
            }
            set {
                this._Orders.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Shipper = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Orders(Order entity) {
            this.OnPropertyChanging(null);
            entity.Shipper = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Suppliers")]
    public partial class Supplier : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _SupplierID;
        
        private string _CompanyName;
        
        private string _ContactName;
        
        private string _ContactTitle;
        
        private string _Address;
        
        private string _City;
        
        private string _Region;
        
        private string _PostalCode;
        
        private string _Country;
        
        private string _Phone;
        
        private string _Fax;
        
        private string _HomePage;
        
        private global::System.Data.Linq.EntitySet<Product> _Products;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Supplier() {
            this._SupplierID = default(int);
            this._Products = new global::System.Data.Linq.EntitySet<Product>(new global::System.Action<Product>(this.Attach_Products), new global::System.Action<Product>(this.Detach_Products));
        }
        
        [global::System.Data.Linq.Column(Storage="_SupplierID", Name="SupplierID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int SupplierID {
            get {
                return this._SupplierID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CompanyName", Name="CompanyName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string CompanyName {
            get {
                return this._CompanyName;
            }
            set {
                if ((this._CompanyName != value)) {
                    this.OnPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactName", Name="ContactName", DBType="NVarChar(30)")]
        public string ContactName {
            get {
                return this._ContactName;
            }
            set {
                if ((this._ContactName != value)) {
                    this.OnPropertyChanging("ContactName");
                    this._ContactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactTitle", Name="ContactTitle", DBType="NVarChar(30)")]
        public string ContactTitle {
            get {
                return this._ContactTitle;
            }
            set {
                if ((this._ContactTitle != value)) {
                    this.OnPropertyChanging("ContactTitle");
                    this._ContactTitle = value;
                    this.OnPropertyChanged("ContactTitle");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Address", Name="Address", DBType="NVarChar(60)")]
        public string Address {
            get {
                return this._Address;
            }
            set {
                if ((this._Address != value)) {
                    this.OnPropertyChanging("Address");
                    this._Address = value;
                    this.OnPropertyChanged("Address");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_City", Name="City", DBType="NVarChar(15)")]
        public string City {
            get {
                return this._City;
            }
            set {
                if ((this._City != value)) {
                    this.OnPropertyChanging("City");
                    this._City = value;
                    this.OnPropertyChanged("City");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Region", Name="Region", DBType="NVarChar(15)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this.OnPropertyChanging("Region");
                    this._Region = value;
                    this.OnPropertyChanged("Region");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_PostalCode", Name="PostalCode", DBType="NVarChar(10)")]
        public string PostalCode {
            get {
                return this._PostalCode;
            }
            set {
                if ((this._PostalCode != value)) {
                    this.OnPropertyChanging("PostalCode");
                    this._PostalCode = value;
                    this.OnPropertyChanged("PostalCode");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Country", Name="Country", DBType="NVarChar(15)")]
        public string Country {
            get {
                return this._Country;
            }
            set {
                if ((this._Country != value)) {
                    this.OnPropertyChanging("Country");
                    this._Country = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Phone", Name="Phone", DBType="NVarChar(24)")]
        public string Phone {
            get {
                return this._Phone;
            }
            set {
                if ((this._Phone != value)) {
                    this.OnPropertyChanging("Phone");
                    this._Phone = value;
                    this.OnPropertyChanged("Phone");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Fax", Name="Fax", DBType="NVarChar(24)")]
        public string Fax {
            get {
                return this._Fax;
            }
            set {
                if ((this._Fax != value)) {
                    this.OnPropertyChanging("Fax");
                    this._Fax = value;
                    this.OnPropertyChanged("Fax");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_HomePage", Name="HomePage", DBType="NText")]
        public string HomePage {
            get {
                return this._HomePage;
            }
            set {
                if ((this._HomePage != value)) {
                    this.OnPropertyChanging("HomePage");
                    this._HomePage = value;
                    this.OnPropertyChanged("HomePage");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Suppliers", Storage="_Products", OtherKey="SupplierID", ThisKey="SupplierID")]
        public global::System.Data.Linq.EntitySet<Product> Products {
            get {
                return this._Products;
            }
            set {
                this._Products.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Supplier = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Supplier = null;
            this.OnPropertyChanged(null);
        }
    }
}
